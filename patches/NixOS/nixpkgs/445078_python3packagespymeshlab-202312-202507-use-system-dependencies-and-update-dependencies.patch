From c48cc7074236b6183958e3502bb3140d9b0b4c7f Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 09:59:02 +0200
Subject: [PATCH 01/22] levmar: adopt

---
 pkgs/by-name/le/levmar/package.nix | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pkgs/by-name/le/levmar/package.nix b/pkgs/by-name/le/levmar/package.nix
index ac7879f7408745..d6e974f7064e6b 100644
--- a/pkgs/by-name/le/levmar/package.nix
+++ b/pkgs/by-name/le/levmar/package.nix
@@ -34,7 +34,7 @@ stdenv.mkDerivation (finalAttrs: {
     description = "ANSI C implementations of Levenberg-Marquardt, usable also from C++";
     homepage = "https://www.ics.forth.gr/~lourakis/levmar/";
     license = lib.licenses.gpl2Plus;
-    maintainers = [ ];
+    maintainers = [ lib.maintainers.nim65s ];
     platforms = lib.platforms.all;
   };
 })

From 7ed565a2e57ee172dad31ed7402b9f95872c328d Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Tue, 16 Sep 2025 12:38:15 +0200
Subject: [PATCH 02/22] levmar: install new header

lm.h only contains a deprecation warning now
---
 pkgs/by-name/le/levmar/package.nix | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pkgs/by-name/le/levmar/package.nix b/pkgs/by-name/le/levmar/package.nix
index d6e974f7064e6b..a52760b3736807 100644
--- a/pkgs/by-name/le/levmar/package.nix
+++ b/pkgs/by-name/le/levmar/package.nix
@@ -26,7 +26,7 @@ stdenv.mkDerivation (finalAttrs: {
 
   installPhase = ''
     mkdir -p $out/include $out/lib
-    cp lm.h $out/include
+    cp levmar.h lm.h $out/include
     cp liblevmar.a $out/lib
   '';
 

From 1d8b2d4763b0fbb9e8d377e57a51ed90c5619ddf Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 09:22:08 +0200
Subject: [PATCH 03/22] lib3mf: adopt

---
 pkgs/by-name/li/lib3mf/package.nix | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pkgs/by-name/li/lib3mf/package.nix b/pkgs/by-name/li/lib3mf/package.nix
index 813138971444b7..0434368b5698f4 100644
--- a/pkgs/by-name/li/lib3mf/package.nix
+++ b/pkgs/by-name/li/lib3mf/package.nix
@@ -109,7 +109,7 @@ stdenv.mkDerivation (finalAttrs: {
     description = "Reference implementation of the 3D Manufacturing Format file standard";
     homepage = "https://3mf.io/";
     license = licenses.bsd2;
-    maintainers = [ ];
+    maintainers = with maintainers; [ nim65s ];
     platforms = platforms.all;
   };
 })

From 40e989cf4566e315941c5b894f9ff45a85f52ce6 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 09:42:31 +0200
Subject: [PATCH 04/22] lib3mf: fix CMake export

---
 pkgs/by-name/li/lib3mf/package.nix | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/pkgs/by-name/li/lib3mf/package.nix b/pkgs/by-name/li/lib3mf/package.nix
index 0434368b5698f4..2b29e533a5b5ea 100644
--- a/pkgs/by-name/li/lib3mf/package.nix
+++ b/pkgs/by-name/li/lib3mf/package.nix
@@ -98,6 +98,11 @@ stdenv.mkDerivation (finalAttrs: {
       --replace-warn "RAND_cleanup();" "" \
       --replace-warn "EVP_cleanup();" "" \
       --replace-warn "CRYPTO_cleanup_all_ex_data();" ""
+
+    # Fix CMake export
+    substituteInPlace cmake/lib3mfConfig.cmake \
+      --replace-fail "$""{LIB3MF_ROOT_DIR}/include" "$""{LIB3MF_ROOT_DIR}/include/lib3mf" \
+      --replace-fail "$""{LIB3MF_ROOT_DIR}/lib" "$out/lib"
   '';
 
   doCheck = true;

From c871af96157c42a017e70d7bc6a42e056fb0a449 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 5 Oct 2025 22:39:40 +0200
Subject: [PATCH 05/22] lib3mf: replace-warn -> replace-fail

Co-authored-by: Sandro <7258858+SuperSandro2000@users.noreply.github.com>
---
 pkgs/by-name/li/lib3mf/package.nix | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/pkgs/by-name/li/lib3mf/package.nix b/pkgs/by-name/li/lib3mf/package.nix
index 2b29e533a5b5ea..78bd8735007131 100644
--- a/pkgs/by-name/li/lib3mf/package.nix
+++ b/pkgs/by-name/li/lib3mf/package.nix
@@ -95,9 +95,9 @@ stdenv.mkDerivation (finalAttrs: {
 
     # functions are no longer in openssl, remove them from test cleanup function
     substituteInPlace Tests/CPP_Bindings/Source/UnitTest_EncryptionUtils.cpp \
-      --replace-warn "RAND_cleanup();" "" \
-      --replace-warn "EVP_cleanup();" "" \
-      --replace-warn "CRYPTO_cleanup_all_ex_data();" ""
+      --replace-fail "RAND_cleanup();" "" \
+      --replace-fail "EVP_cleanup();" "" \
+      --replace-fail "CRYPTO_cleanup_all_ex_data();" ""
 
     # Fix CMake export
     substituteInPlace cmake/lib3mfConfig.cmake \

From cf3da26d52357091daf87e785530fdb9fc8ed3c8 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Fri, 19 Sep 2025 12:16:00 +0200
Subject: [PATCH 06/22] tinygltf: init at 2.9.6

---
 pkgs/by-name/ti/tinygltf/package.nix | 30 ++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
 create mode 100644 pkgs/by-name/ti/tinygltf/package.nix

diff --git a/pkgs/by-name/ti/tinygltf/package.nix b/pkgs/by-name/ti/tinygltf/package.nix
new file mode 100644
index 00000000000000..56411424445685
--- /dev/null
+++ b/pkgs/by-name/ti/tinygltf/package.nix
@@ -0,0 +1,30 @@
+{
+  lib,
+  stdenv,
+  fetchFromGitHub,
+  cmake,
+}:
+
+stdenv.mkDerivation (finalAttrs: {
+  pname = "tinygltf";
+  version = "2.9.6";
+
+  src = fetchFromGitHub {
+    owner = "syoyo";
+    repo = "tinygltf";
+    tag = "v${finalAttrs.version}";
+    hash = "sha256-3dBxfdXeTbzeQAXaBXFaflLgXYeuOfESdq6V3+0iCXY=";
+  };
+
+  nativeBuildInputs = [
+    cmake
+  ];
+
+  meta = {
+    description = "Header only C++11 tiny glTF 2.0 library";
+    homepage = "https://github.com/syoyo/tinygltf";
+    license = lib.licenses.mit;
+    maintainers = with lib.maintainers; [ nim65s ];
+    platforms = lib.platforms.unix;
+  };
+})

From 3c03b2123a74932513a3c3425c2e526e1a36b76f Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 21 Sep 2025 22:52:56 +0200
Subject: [PATCH 07/22] libigl: dont install opengl headers

fix meshlab on darwin:
```
[ 47%] Building CXX object src/meshlabplugins/filter_cubization/CMakeFiles/filter_cubization.dir/filter_cubization_autogen/mocs_compilation.cpp.o
In file included from /tmp/nix-build-meshlab-2025.07.drv-0/source/build/src/meshlabplugins/filter_cubization/filter_cubization_autogen/mocs_compilation.cpp:2:
In file included from /tmp/nix-build-meshlab-2025.07.drv-0/source/build/src/meshlabplugins/filter_cubization/filter_cubization_autogen/EWIEGA46WW/moc_filter_cubization.cpp:10:
In file included from /tmp/nix-build-meshlab-2025.07.drv-0/source/build/src/meshlabplugins/filter_cubization/filter_cubization_autogen/EWIEGA46WW/../../../../../../src/meshlabplugins/filter_cubization/filter_cubization.h:28:
In file included from /tmp/nix-build-meshlab-2025.07.drv-0/source/src/common/../common/plugins/interfaces/filter_plugin.h:29:
In file included from /tmp/nix-build-meshlab-2025.07.drv-0/source/src/common/../common/plugins/interfaces/../../ml_document/mesh_document.h:27:
In file included from /tmp/nix-build-meshlab-2025.07.drv-0/source/src/common/../common/plugins/interfaces/../../ml_document/mesh_model.h:26:
In file included from /nix/store/18nlfi993h20y6dd1kfg8zm9gaglwygn-glew-2.2.0-dev/include/GL/glew.h:1217:
In file included from /nix/store/rhlyld20zdzdi5wghb4b12gw52s9whr9-apple-sdk-11.3/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenGL.framework/Headers/glu.h:9:
/nix/store/zchkzj4md6q4lq09iidcm4c8n7r22k46-libigl-2.6.0/include/igl/OpenGL/gl.h:23:10: fatal error: 'glad/glad.h' file not found
   23 | #include <glad/glad.h>
      |          ^~~~~~~~~~~~~
```
---
 pkgs/by-name/li/libigl/package.nix | 1 +
 1 file changed, 1 insertion(+)

diff --git a/pkgs/by-name/li/libigl/package.nix b/pkgs/by-name/li/libigl/package.nix
index 1fc21b8f63d4d3..1ef1a6d7332441 100644
--- a/pkgs/by-name/li/libigl/package.nix
+++ b/pkgs/by-name/li/libigl/package.nix
@@ -20,6 +20,7 @@ stdenvNoCC.mkDerivation (finalAttrs: {
   installPhase = ''
     mkdir -p $out/include
     cp -r include/igl $out/include
+    rm -rf $out/include/igl/opengl
   '';
 
   meta = with lib; {

From 3eadebc7b5efd1a9e2699b8a6ec9fe14dc1fc47b Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 11:02:03 +0200
Subject: [PATCH 08/22] vcg: adopt

---
 pkgs/by-name/vc/vcg/package.nix | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pkgs/by-name/vc/vcg/package.nix b/pkgs/by-name/vc/vcg/package.nix
index 487b4510263eac..2a2e43e061ed36 100644
--- a/pkgs/by-name/vc/vcg/package.nix
+++ b/pkgs/by-name/vc/vcg/package.nix
@@ -29,6 +29,6 @@ stdenv.mkDerivation rec {
     description = "C++ library for manipulation, processing and displaying with OpenGL of triangle and tetrahedral meshes";
     license = licenses.gpl3;
     platforms = platforms.all;
-    maintainers = [ ];
+    maintainers = [ lib.maintainers.nim65s ];
   };
 }

From 2964820a945af779b5c6df0e7999b4d0c5f4c2cf Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 11:03:24 +0200
Subject: [PATCH 09/22] vcg: clean

---
 pkgs/by-name/vc/vcg/package.nix | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/pkgs/by-name/vc/vcg/package.nix b/pkgs/by-name/vc/vcg/package.nix
index 2a2e43e061ed36..bf3f4a7ff8e588 100644
--- a/pkgs/by-name/vc/vcg/package.nix
+++ b/pkgs/by-name/vc/vcg/package.nix
@@ -1,19 +1,22 @@
 {
   lib,
+
   stdenv,
   fetchFromGitHub,
+
+  # propagatedBuildInputs
   eigen,
 }:
 
-stdenv.mkDerivation rec {
+stdenv.mkDerivation (finalAttrs: {
   pname = "vcg";
   version = "2025.07";
 
   src = fetchFromGitHub {
     owner = "cnr-isti-vclab";
     repo = "vcglib";
-    rev = version;
-    sha256 = "sha256-OZnqFnHGXC9fS7JCLTiHNCeA//JBAZGLB5SP/rGzaA8=";
+    tag = finalAttrs.version;
+    hash = "sha256-OZnqFnHGXC9fS7JCLTiHNCeA//JBAZGLB5SP/rGzaA8=";
   };
 
   propagatedBuildInputs = [ eigen ];
@@ -24,11 +27,11 @@ stdenv.mkDerivation rec {
     find $out -name \*.h -exec sed -i 's,<eigenlib/,<eigen3/,g' {} \;
   '';
 
-  meta = with lib; {
+  meta = {
     homepage = "https://vcg.isti.cnr.it/vcglib/install.html";
     description = "C++ library for manipulation, processing and displaying with OpenGL of triangle and tetrahedral meshes";
-    license = licenses.gpl3;
-    platforms = platforms.all;
+    license = lib.licenses.gpl3;
+    platforms = lib.platforms.all;
     maintainers = [ lib.maintainers.nim65s ];
   };
-}
+})

From 1baafefac8a5ee85fb1dc1779cfc4f7a1ac56a4c Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 12:32:22 +0200
Subject: [PATCH 10/22] vcg: switch to CMake

---
 pkgs/by-name/vc/vcg/package.nix | 32 ++++++++++++++++++++++++++------
 1 file changed, 26 insertions(+), 6 deletions(-)

diff --git a/pkgs/by-name/vc/vcg/package.nix b/pkgs/by-name/vc/vcg/package.nix
index bf3f4a7ff8e588..8db97500a18fe6 100644
--- a/pkgs/by-name/vc/vcg/package.nix
+++ b/pkgs/by-name/vc/vcg/package.nix
@@ -3,6 +3,10 @@
 
   stdenv,
   fetchFromGitHub,
+  fetchpatch,
+
+  # nativeBuildInputs
+  cmake,
 
   # propagatedBuildInputs
   eigen,
@@ -19,13 +23,29 @@ stdenv.mkDerivation (finalAttrs: {
     hash = "sha256-OZnqFnHGXC9fS7JCLTiHNCeA//JBAZGLB5SP/rGzaA8=";
   };
 
-  propagatedBuildInputs = [ eigen ];
+  patches = [
+    # CMake: install lib and exports
+    # ref. https://github.com/cnr-isti-vclab/vcglib/pull/248
+    # merged upstream
+    (fetchpatch {
+      name = "cmake-install-lib-and-exports.patch";
+      url = "https://github.com/cnr-isti-vclab/vcglib/commit/4a8dd8d6e54890aee76917d27aabfa7031cbc68d.patch";
+      hash = "sha256-b3qsmLu+4VSs943VS3C4gdG/PDR2mhr9/dDTmkep8zo=";
+    })
+  ];
+
+  nativeBuildInputs = [
+    cmake
+  ];
+
+  propagatedBuildInputs = [
+    eigen
+  ];
 
-  installPhase = ''
-    mkdir -p $out/include
-    cp -r vcg wrap $out/include
-    find $out -name \*.h -exec sed -i 's,<eigenlib/,<eigen3/,g' {} \;
-  '';
+  cmakeFlags = [
+    (lib.cmakeBool "VCG_ALLOW_BUNDLED_EIGEN" false)
+    (lib.cmakeBool "VCG_BUILD_EXAMPLES" false)
+  ];
 
   meta = {
     homepage = "https://vcg.isti.cnr.it/vcglib/install.html";

From 1680a6747855aec4a0787689a065c1cd5d06f523 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Tue, 16 Sep 2025 15:59:03 +0200
Subject: [PATCH 11/22] corto: 0-unstable-2024-04-05 -> v2025.07

---
 pkgs/by-name/co/corto/package.nix | 32 +++++++++++++++++++++++--------
 1 file changed, 24 insertions(+), 8 deletions(-)

diff --git a/pkgs/by-name/co/corto/package.nix b/pkgs/by-name/co/corto/package.nix
index acf0517e0c10a3..5efe16c864c442 100644
--- a/pkgs/by-name/co/corto/package.nix
+++ b/pkgs/by-name/co/corto/package.nix
@@ -2,26 +2,42 @@
   lib,
   stdenv,
   fetchFromGitHub,
+  fetchpatch,
   cmake,
+  nix-update-script,
 }:
 
-stdenv.mkDerivation {
+stdenv.mkDerivation (finalAttrs: {
   pname = "corto";
-  version = "0-unstable-2024-04-05";
+  version = "2025.07";
 
   src = fetchFromGitHub {
     owner = "cnr-isti-vclab";
     repo = "corto";
-    rev = "d880519c490c88a39d12c31a914b6a687a7019c3";
-    hash = "sha256-0OUijrf+0ZNv3oYko2r8Kp9zgtg8b9RPL7DXHf15Ryc=";
+    tag = "v${finalAttrs.version}";
+    hash = "sha256-wfIZQdypBTfUZJgPE4DetSt1SUNSyZihmL1Uzapqh1o=";
   };
 
+  patches = [
+    # CMake: exports
+    # ref. https://github.com/cnr-isti-vclab/corto/pull/47
+    # merged upstream
+    (fetchpatch {
+      name = "cmake-exports.patch";
+      url = "https://github.com/cnr-isti-vclab/corto/commit/169356e97b29587b278822118aef34ed742b6b37.patch";
+      hash = "sha256-imJfQ8JEhCcSkkO35N7Z3NtGElCyVxENPMDMWfNqdW0=";
+    })
+  ];
+
   nativeBuildInputs = [ cmake ];
 
-  meta = with lib; {
+  updateScript = nix-update-script { };
+
+  meta = {
     description = "Mesh compression library, designed for rendering and speed";
     homepage = "https://github.com/cnr-isti-vclab/corto";
-    license = licenses.mit;
-    maintainers = with maintainers; [ nim65s ];
+    license = lib.licenses.mit;
+    maintainers = with lib.maintainers; [ nim65s ];
+    mainProgram = "corto";
   };
-}
+})

From d1ee1ad455de1d8b1ff6c6ef9c5406941bbc1f1f Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Wed, 17 Sep 2025 11:00:26 +0200
Subject: [PATCH 12/22] vclab-nexus: init at 2025.05

Co-authored-by: Sandro <sandro.jaeckel@gmail.com>
---
 pkgs/by-name/li/lib3mf/package.nix      |  1 +
 pkgs/by-name/vc/vclab-nexus/package.nix | 72 +++++++++++++++++++++++++
 2 files changed, 73 insertions(+)
 create mode 100644 pkgs/by-name/vc/vclab-nexus/package.nix

diff --git a/pkgs/by-name/li/lib3mf/package.nix b/pkgs/by-name/li/lib3mf/package.nix
index 78bd8735007131..289fcaf48d7595 100644
--- a/pkgs/by-name/li/lib3mf/package.nix
+++ b/pkgs/by-name/li/lib3mf/package.nix
@@ -100,6 +100,7 @@ stdenv.mkDerivation (finalAttrs: {
       --replace-fail "CRYPTO_cleanup_all_ex_data();" ""
 
     # Fix CMake export
+    # ref https://github.com/3MFConsortium/lib3mf/pull/434
     substituteInPlace cmake/lib3mfConfig.cmake \
       --replace-fail "$""{LIB3MF_ROOT_DIR}/include" "$""{LIB3MF_ROOT_DIR}/include/lib3mf" \
       --replace-fail "$""{LIB3MF_ROOT_DIR}/lib" "$out/lib"
diff --git a/pkgs/by-name/vc/vclab-nexus/package.nix b/pkgs/by-name/vc/vclab-nexus/package.nix
new file mode 100644
index 00000000000000..2bdfe17547b6ba
--- /dev/null
+++ b/pkgs/by-name/vc/vclab-nexus/package.nix
@@ -0,0 +1,72 @@
+{
+  lib,
+
+  stdenv,
+  fetchFromGitHub,
+  fetchpatch,
+
+  # nativeBuildInputs
+  cmake,
+  libsForQt5,
+
+  # buildInputs
+  corto,
+  glew,
+  llvmPackages,
+  vcg,
+}:
+
+stdenv.mkDerivation (finalAttrs: {
+  pname = "nexus";
+  version = "2025.05";
+
+  src = fetchFromGitHub {
+    owner = "cnr-isti-vclab";
+    repo = "nexus";
+    tag = "v${finalAttrs.version}";
+    hash = "sha256-lC3nKQJwkixwGzPP/oS0J+WIFgYqky6NaXu9bX28+3I=";
+  };
+
+  outputs = [
+    "out"
+    "bin"
+  ];
+
+  patches = [
+    # CMake: install lib & exports
+    # ref. https://github.com/cnr-isti-vclab/nexus/pull/173
+    # merged upstream
+    (fetchpatch {
+      url = "https://github.com/cnr-isti-vclab/nexus/commit/141ba17059f3680a74ce1178ed4245412f76061f.patch";
+      hash = "sha256-iY84QIpliC1BIImI/6S6E6fQwMKPmmTiwouCXW6wLuM=";
+    })
+  ];
+
+  nativeBuildInputs = [
+    cmake
+    libsForQt5.wrapQtAppsHook
+  ];
+
+  buildInputs = [
+    corto
+    glew
+    libsForQt5.qtbase
+    vcg
+  ]
+  ++ lib.optionals stdenv.cc.isClang [
+    llvmPackages.openmp
+  ];
+
+  cmakeFlags = [
+    (lib.cmakeBool "BUILD_NXS_VIEW" (!stdenv.hostPlatform.isDarwin))
+  ];
+
+  meta = {
+    description = "Library for creation and visualization of a batched multiresolution mesh";
+    homepage = "https://github.com/cnr-isti-vclab/nexus";
+    license = lib.licenses.gpl2;
+    maintainers = with lib.maintainers; [ nim65s ];
+    mainProgram = "nxsview";
+    platforms = lib.platforms.unix ++ lib.platforms.windows;
+  };
+})

From e30f949fac49ebbd33f6b9fd4e0a9552a3d257bd Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Tue, 16 Sep 2025 12:03:57 +0200
Subject: [PATCH 13/22] meshlab: adopt

---
 pkgs/by-name/me/meshlab/package.nix | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/pkgs/by-name/me/meshlab/package.nix b/pkgs/by-name/me/meshlab/package.nix
index dedae59c8c345e..d86aea7157db1e 100644
--- a/pkgs/by-name/me/meshlab/package.nix
+++ b/pkgs/by-name/me/meshlab/package.nix
@@ -163,7 +163,10 @@ stdenv.mkDerivation (finalAttrs: {
     mainProgram = "meshlab";
     homepage = "https://www.meshlab.net/";
     license = lib.licenses.gpl3Only;
-    maintainers = with lib.maintainers; [ yzx9 ];
+    maintainers = with lib.maintainers; [
+      nim65s
+      yzx9
+    ];
     platforms = with lib.platforms; linux ++ darwin;
   };
 })

From cc02ff8ee0218c7657260b69883c3d3cc87ead68 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Tue, 16 Sep 2025 12:10:18 +0200
Subject: [PATCH 14/22] meshlab: 2023.12 -> 2025.07 + use system dependencies

---
 ...-system-dependencies-install-exports.patch | 279 ++++++++++++++++++
 pkgs/by-name/me/meshlab/package.nix           |  71 ++---
 2 files changed, 309 insertions(+), 41 deletions(-)
 create mode 100644 pkgs/by-name/me/meshlab/1617_cmake-use-system-dependencies-install-exports.patch

diff --git a/pkgs/by-name/me/meshlab/1617_cmake-use-system-dependencies-install-exports.patch b/pkgs/by-name/me/meshlab/1617_cmake-use-system-dependencies-install-exports.patch
new file mode 100644
index 00000000000000..83e6a21ea509ee
--- /dev/null
+++ b/pkgs/by-name/me/meshlab/1617_cmake-use-system-dependencies-install-exports.patch
@@ -0,0 +1,279 @@
+From 1a617220a286c23ecac1ad7bd6aca0d2c68bd1f3 Mon Sep 17 00:00:00 2001
+From: Guilhem Saurel <guilhem.saurel@laas.fr>
+Date: Fri, 19 Sep 2025 08:43:18 +0200
+Subject: [PATCH 1/6] CMake: allow system vcglib
+
+---
+ src/CMakeLists.txt | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
+
+diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
+index 0398e8566..839a515be 100644
+--- a/src/CMakeLists.txt
++++ b/src/CMakeLists.txt
+@@ -75,7 +75,12 @@ endif()
+ ### Enter subdirectories
+ 
+ # VCGLib -- required
+-if (VCGDIR) # VCGDIR exists - using custom user vcglib path
++find_package(vcglib CONFIG)
++if(TARGET vcglib::vcglib)
++	message(STATUS "- VCGLib - using system provided library")
++	add_library(vcglib ALIAS vcglib::vcglib)
++	get_target_property(VCGDIR vcglib::vcglib INTERFACE_INCLUDE_DIRECTORIES)
++elseif (VCGDIR) # VCGDIR exists - using custom user vcglib path
+ 	if(EXISTS ${VCGDIR})
+ 		add_subdirectory(${VCGDIR} {CMAKE_CURRENT_BINARY_DIR}/vcglib)
+ 		message(STATUS "- VCGLib - using custom VCGDIR path library")
+
+From 73debae9b9ca14554c25fa58480969bc7c3f61d1 Mon Sep 17 00:00:00 2001
+From: Guilhem Saurel <guilhem.saurel@laas.fr>
+Date: Tue, 16 Sep 2025 12:44:12 +0200
+Subject: [PATCH 2/6] CMake: MESHLAB_ALLOW_SYSTEM_LEVMAR
+
+---
+ src/external/levmar.cmake | 19 ++++++++++++++++++-
+ 1 file changed, 18 insertions(+), 1 deletion(-)
+
+diff --git a/src/external/levmar.cmake b/src/external/levmar.cmake
+index cc639f09e..882b631db 100644
+--- a/src/external/levmar.cmake
++++ b/src/external/levmar.cmake
+@@ -3,8 +3,25 @@
+ # SPDX-License-Identifier: BSL-1.0
+ 
+ option(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LEVMAR "Allow download and use of levmar source" ON)
++option(MESHLAB_ALLOW_SYSTEM_LEVMAR "Allow use of system-provided levmar" ON)
+ 
+-if(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LEVMAR)
++find_path(levmar_INCLUDE_DIR NAMES levmar.h PATHS ${levmar_PREFIX})
++find_library(levmar_LIBRARY NAMES levmar PATHS ${levmar_PREFIX})
++include(FindPackageHandleStandardArgs)
++find_package_handle_standard_args(
++	levmar
++	DEFAULT_MSG
++	levmar_LIBRARY
++	levmar_INCLUDE_DIR
++)
++mark_as_advanced(levmar_INCLUDE_DIR levmar_LIBRARY)
++
++if(MESHLAB_ALLOW_SYSTEM_LEVMAR AND levmar_FOUND)
++	message(STATUS "- levmar - using system-provided library")
++	add_library(external-levmar INTERFACE)
++	target_link_libraries(external-levmar INTERFACE ${levmar_LIBRARY})
++	target_include_directories(external-levmar INTERFACE ${levmar_INCLUDE_DIR})
++elseif(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LEVMAR)
+ 	set(LEVMAR_VERSION "2.6.1")
+ 
+ 	set(LEVMAR_DIR "${MESHLAB_EXTERNAL_DOWNLOAD_DIR}/levmar-${LEVMAR_VERSION}")
+
+From 161d5dabad4cfdc3ec08d9e5dd2ee6c94b057c5c Mon Sep 17 00:00:00 2001
+From: Guilhem Saurel <guilhem.saurel@laas.fr>
+Date: Tue, 16 Sep 2025 15:15:11 +0200
+Subject: [PATCH 3/6] CMake: MESHLAB_ALLOW_SYSTEM_LIB3MF
+
+---
+ src/external/lib3mf.cmake | 9 ++++++++-
+ 1 file changed, 8 insertions(+), 1 deletion(-)
+
+diff --git a/src/external/lib3mf.cmake b/src/external/lib3mf.cmake
+index 1cd1b5dfa..f64a63aa5 100644
+--- a/src/external/lib3mf.cmake
++++ b/src/external/lib3mf.cmake
+@@ -22,8 +22,15 @@
+ #############################################################################
+ 
+ option(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LIB3MF "Allow download and use of lib3MF source" ON)
++option(MESHLAB_ALLOW_SYSTEM_LIB3MF "Allow use of system-provided lib3MF" ON)
+ 
+-if(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LIB3MF)
++find_package(lib3mf)
++
++if(MESHLAB_ALLOW_SYSTEM_LIB3MF AND TARGET lib3mf::lib3mf)
++  message(STATUS "- Lib3MF - using system-provided library")
++  add_library(external-lib3mf INTERFACE)
++  target_link_libraries(external-lib3mf INTERFACE lib3mf::lib3mf)
++elseif(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LIB3MF)
+   set(LIB3MF_VERSION "2.4.1")
+ 
+   set(LIB3MF_DIR ${MESHLAB_EXTERNAL_DOWNLOAD_DIR}/lib3mf-${LIB3MF_VERSION})
+
+From c6662d486c1f8e5c9c89389abd630d8218b0fcb9 Mon Sep 17 00:00:00 2001
+From: Guilhem Saurel <guilhem.saurel@laas.fr>
+Date: Tue, 16 Sep 2025 15:42:59 +0200
+Subject: [PATCH 4/6] CMake: MESHLAB_ALLOW_SYSTEM_LIBIGL
+
+---
+ src/external/libigl.cmake | 9 ++++++++-
+ 1 file changed, 8 insertions(+), 1 deletion(-)
+
+diff --git a/src/external/libigl.cmake b/src/external/libigl.cmake
+index 3666f375d..8f84fea4f 100644
+--- a/src/external/libigl.cmake
++++ b/src/external/libigl.cmake
+@@ -3,10 +3,17 @@
+ # SPDX-License-Identifier: BSL-1.0
+ 
+ option(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LIBIGL "Allow download and use of LibIGL source" ON)
++option(MESHLAB_ALLOW_SYSTEM_LIBIGL "Allow use of system-provided LibIGL" ON)
+ 
+ set(LIBIGL_VER 2.4.0)
+ 
+-if(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LIBIGL)
++find_path(libigl_INCLUDE_DIR NAMES igl_inline.h PATH_SUFFIXES igl PATHS ${libigl_PREFIX})
++
++if(MESHLAB_ALLOW_SYSTEM_LIBIGL AND libigl_INCLUDE_DIR)
++	message(STATUS "- LibIGL - using system-provided library")
++	add_library(external-libigl INTERFACE)
++	target_include_directories(external-libigl INTERFACE ${libigl_INCLUDE_DIR})
++elseif(MESHLAB_ALLOW_DOWNLOAD_SOURCE_LIBIGL)
+ 	set(LIBIGL_DIR "${MESHLAB_EXTERNAL_DOWNLOAD_DIR}/libigl-${LIBIGL_VER}")
+ 	set(LIBIGL_CHECK "${LIBIGL_DIR}/include/igl/igl_inline.h")
+ 
+
+From a26427e32af672d2554d662376f3f258c64941ca Mon Sep 17 00:00:00 2001
+From: Guilhem Saurel <guilhem.saurel@laas.fr>
+Date: Fri, 19 Sep 2025 08:58:16 +0200
+Subject: [PATCH 5/6] CMake: MESHLAB_ALLOW_SYSTEM_NEXUS
+
+---
+ src/external/nexus.cmake | 9 ++++++++-
+ 1 file changed, 8 insertions(+), 1 deletion(-)
+
+diff --git a/src/external/nexus.cmake b/src/external/nexus.cmake
+index 9fc92f714..1139d11e7 100644
+--- a/src/external/nexus.cmake
++++ b/src/external/nexus.cmake
+@@ -3,11 +3,18 @@
+ # SPDX-License-Identifier: BSL-1.0
+ 
+ option(MESHLAB_ALLOW_DOWNLOAD_SOURCE_NEXUS "Allow download and use of nexus source" ON)
++option(MESHLAB_ALLOW_SYSTEM_NEXUS "Allow use of system-provided nexus and corto" ON)
+ 
+ set(CORTO_VER 2025.07)
+ set(NEXUS_VER 2025.05)
+ 
+-if(MESHLAB_ALLOW_DOWNLOAD_SOURCE_NEXUS)
++find_package(nexus CONFIG)
++
++if(MESHLAB_ALLOW_SYSTEM_NEXUS AND TARGET nexus::nexus)
++	message(STATUS "- nexus - using system-provided library")
++	add_library(external-nexus INTERFACE)
++	target_link_libraries(external-nexus INTERFACE nexus::nexus)
++elseif(MESHLAB_ALLOW_DOWNLOAD_SOURCE_NEXUS)
+ 	set(NEXUS_DIR "${MESHLAB_EXTERNAL_DOWNLOAD_DIR}/nexus-${NEXUS_VER}")
+ 	set(NEXUS_CHECK "${NEXUS_DIR}/CMakeLists.txt")
+ 	set(CORTO_DIR "${NEXUS_DIR}/src/corto")
+
+From 32be737316181bd84d8beac7cb6b74379965d2fe Mon Sep 17 00:00:00 2001
+From: Guilhem Saurel <guilhem.saurel@laas.fr>
+Date: Fri, 19 Sep 2025 11:26:36 +0200
+Subject: [PATCH 6/6] CMake: install exports
+
+---
+ src/CMakeLists.txt                        | 21 +++++++++++++++++++++
+ src/Config.cmake.in                       |  9 +++++++++
+ src/common/CMakeLists.txt                 | 18 ++++++++++++++----
+ src/meshlabplugins/io_base/CMakeLists.txt |  2 +-
+ 4 files changed, 45 insertions(+), 5 deletions(-)
+ create mode 100644 src/Config.cmake.in
+
+diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
+index 839a515be..c490ea960 100644
+--- a/src/CMakeLists.txt
++++ b/src/CMakeLists.txt
+@@ -229,6 +229,27 @@ endforeach()
+ set(COPIED_FILES)
+ 
+ if (NOT MESHLAB_BUILD_ONLY_LIBRARIES)
++	# headers
++	install(DIRECTORY common DESTINATION include FILES_MATCHING PATTERN "*.h")
++	# CMake exports
++	install(EXPORT meshlabTargets
++		DESTINATION lib/cmake/meshlab
++		NAMESPACE meshlab::
++		FILE meshlabTargets.cmake
++	)
++	include(CMakePackageConfigHelpers)
++	# generate the config file that includes the exports
++	configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
++		"${CMAKE_CURRENT_BINARY_DIR}/meshlabConfig.cmake"
++		INSTALL_DESTINATION lib/cmake/vcglib
++		NO_SET_AND_CHECK_MACRO
++		NO_CHECK_REQUIRED_COMPONENTS_MACRO
++	)
++	install(FILES
++		"${CMAKE_CURRENT_BINARY_DIR}/meshlabConfig.cmake"
++		DESTINATION lib/cmake/meshlab
++	)
++
+ 	# shaders
+ 	set(SHADER_BASE_DIR "${MESHLAB_RESOURCES_DIR}/shaders")
+ 	file(
+diff --git a/src/Config.cmake.in b/src/Config.cmake.in
+new file mode 100644
+index 000000000..63ba0ce97
+--- /dev/null
++++ b/src/Config.cmake.in
+@@ -0,0 +1,9 @@
++@PACKAGE_INIT@
++
++include(CMakeFindDependencyMacro)
++find_dependency(GLEW)
++find_dependency(OpenGL)
++find_dependency(Qt5 COMPONENTS OpenGL Xml Network)
++find_dependency(vcglib)
++
++include ( "${CMAKE_CURRENT_LIST_DIR}/meshlabTargets.cmake" )
+diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
+index 0e640fdd4..c74bd579b 100644
+--- a/src/common/CMakeLists.txt
++++ b/src/common/CMakeLists.txt
+@@ -198,7 +198,8 @@ endif()
+ 
+ target_include_directories(meshlab-common
+ 	PUBLIC
+-		${CMAKE_CURRENT_SOURCE_DIR}/..)
++		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>
++		$<INSTALL_INTERFACE:include>)
+ 
+ target_link_libraries(
+ 	meshlab-common
+@@ -208,10 +209,19 @@ target_link_libraries(
+ 		Qt5::Widgets
+ 		Qt5::Xml
+ 		Qt5::Network
+-		vcglib
+-		external-glew
++	PRIVATE
+ 		external-easyexif
+ )
++if(TARGET vcglib::vcglib)
++	target_link_libraries(meshlab-common PUBLIC vcglib::vcglib)
++else()
++	target_link_libraries(meshlab-common PUBLIC vcglib)
++endif()
++if(TARGET GLEW::GLEW)
++	target_link_libraries(meshlab-common PUBLIC GLEW::GLEW)
++else()
++	target_link_libraries(meshlab-common PUBLIC external-glew)
++endif()
+ 
+ set_property(TARGET meshlab-common PROPERTY FOLDER Core)
+ 
+@@ -234,4 +244,4 @@ endif()
+ set_target_properties(meshlab-common PROPERTIES
+ 	INSTALL_RPATH "$ORIGIN")
+ 
+-install(TARGETS meshlab-common DESTINATION ${MESHLAB_LIB_INSTALL_DIR})
++install(TARGETS meshlab-common EXPORT meshlabTargets DESTINATION ${MESHLAB_LIB_INSTALL_DIR})
+diff --git a/src/meshlabplugins/io_base/CMakeLists.txt b/src/meshlabplugins/io_base/CMakeLists.txt
+index 7a3137e63..64504d56d 100644
+--- a/src/meshlabplugins/io_base/CMakeLists.txt
++++ b/src/meshlabplugins/io_base/CMakeLists.txt
+@@ -27,4 +27,4 @@ set(SOURCES
+ 
+ add_meshlab_plugin(io_base ${SOURCES} ${HEADERS})
+ 
+-target_link_libraries(io_base PRIVATE OpenGL::GLU)
++target_link_libraries(io_base PRIVATE OpenGL::GLU external-easyexif)
diff --git a/pkgs/by-name/me/meshlab/package.nix b/pkgs/by-name/me/meshlab/package.nix
index d86aea7157db1e..5cc3917cd7414a 100644
--- a/pkgs/by-name/me/meshlab/package.nix
+++ b/pkgs/by-name/me/meshlab/package.nix
@@ -6,6 +6,7 @@
   libsForQt5,
   libGLU,
   lib3ds,
+  lib3mf,
   bzip2,
   muparser,
   eigen,
@@ -25,16 +26,10 @@
   corto,
   openctm,
   structuresynth,
+  vclab-nexus,
 }:
 
 let
-  tinygltf-src = fetchFromGitHub {
-    owner = "syoyo";
-    repo = "tinygltf";
-    tag = "v2.6.3";
-    hash = "sha256-IyezvHzgLRyc3z8HdNsQMqDEhP+Ytw0stFNak3C8lTo=";
-  };
-
   downloads = [
     "DLL_EMBREE"
     "SOURCE_BOOST"
@@ -57,19 +52,18 @@ let
 in
 stdenv.mkDerivation (finalAttrs: {
   pname = "meshlab";
-  version = "2023.12";
+  version = "2025.07";
 
   src = fetchFromGitHub {
     owner = "cnr-isti-vclab";
     repo = "meshlab";
     tag = "MeshLab-${finalAttrs.version}";
-    hash = "sha256-AdUAWS741RQclYaSE3Tz1/I0YSinNAnfSaqef+Tib8Y=";
+    hash = "sha256-6BozYzPCbBZ+btL4FCdzKlwKqTsvFWDfOXizzJSYo9s=";
   };
 
   nativeBuildInputs = [
     cmake
     libsForQt5.wrapQtAppsHook
-    vcg # templated library
   ];
 
   buildInputs = [
@@ -78,6 +72,7 @@ stdenv.mkDerivation (finalAttrs: {
     libsForQt5.qtscript
     libsForQt5.qtxmlpatterns
     lib3ds
+    lib3mf
     bzip2
     muparser
     eigen
@@ -91,46 +86,37 @@ stdenv.mkDerivation (finalAttrs: {
     xercesc
     onetbb
     embree
+    vcg
     libigl
     corto
     openctm
     structuresynth
+    vclab-nexus
   ]
   ++ lib.optionals stdenv.cc.isClang [
     llvmPackages.openmp
   ];
 
-  postPatch = ''
-    substituteInPlace src/external/tinygltf.cmake \
-      --replace-fail '$'{MESHLAB_EXTERNAL_DOWNLOAD_DIR}/tinygltf-2.6.3 ${tinygltf-src}
-    substituteInPlace src/external/libigl.cmake \
-      --replace-fail '$'{MESHLAB_EXTERNAL_DOWNLOAD_DIR}/libigl-2.4.0 ${libigl}
-    substituteInPlace src/external/nexus.cmake \
-      --replace-fail '$'{NEXUS_DIR}/src/corto ${corto.src}
-    substituteInPlace src/external/levmar.cmake \
-      --replace-fail '$'{LEVMAR_LINK} ${levmar.src} \
-      --replace-warn "MD5 ''${LEVMAR_MD5}" ""
-    substituteInPlace src/external/ssynth.cmake \
-      --replace-fail '$'{SSYNTH_LINK} ${structuresynth.src} \
-      --replace-warn "MD5 ''${SSYNTH_MD5}" ""
-    substituteInPlace src/common_gui/CMakeLists.txt \
-      --replace-warn "MESHLAB_LIB_INSTALL_DIR" "CMAKE_INSTALL_LIBDIR"
-  ''
-  + lib.optionalString stdenv.hostPlatform.isLinux ''
-    substituteAll ${./meshlab.desktop} resources/linux/meshlab.desktop
-  ''
-  + lib.optionalString stdenv.hostPlatform.isDarwin ''
-    substituteInPlace src/meshlab/CMakeLists.txt \
-      --replace-fail "set_additional_settings_info_plist(" "# set_additional_settings_info_plist(" \
-      --replace-fail "	TARGET meshlab" "#	TARGET meshlab" \
-      --replace-fail "	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)" \
-                     "#	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)"
-  '';
+  patches = [
+    # CMake: use system dependencies, install exports
+    # ref. https://github.com/cnr-isti-vclab/meshlab/pull/1617
+    # merged upstream
+    ./1617_cmake-use-system-dependencies-install-exports.patch
+  ];
 
-  cmakeFlags = [
-    "-DVCGDIR=${vcg.src}"
-  ]
-  ++ cmakeFlagsDisallowDownload;
+  postPatch =
+    lib.optionalString stdenv.hostPlatform.isLinux ''
+      substituteAll ${./meshlab.desktop} resources/linux/meshlab.desktop
+    ''
+    + lib.optionalString stdenv.hostPlatform.isDarwin ''
+      substituteInPlace src/meshlab/CMakeLists.txt \
+        --replace-fail "set_additional_settings_info_plist(" "# set_additional_settings_info_plist(" \
+        --replace-fail "	TARGET meshlab" "#	TARGET meshlab" \
+        --replace-fail "	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)" \
+                       "#	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)"
+    '';
+
+  cmakeFlags = cmakeFlagsDisallowDownload;
 
   postInstall = lib.optionalString stdenv.hostPlatform.isDarwin ''
     mkdir -p $out/{Applications,bin,lib}
@@ -150,7 +136,10 @@ stdenv.mkDerivation (finalAttrs: {
 
   postFixup =
     lib.optionalString stdenv.hostPlatform.isLinux ''
-      patchelf --add-needed $out/lib/meshlab/libmeshlab-common.so $out/bin/.meshlab-wrapped
+      patchelf \
+        --add-needed $out/lib/meshlab/libmeshlab-common.so \
+        --add-needed $out/lib/meshlab/libmeshlab-common-gui.so \
+        $out/bin/.meshlab-wrapped
     ''
     + lib.optionalString stdenv.hostPlatform.isDarwin ''
       wrapQtApp "$out/Applications/meshlab.app/Contents/MacOS/meshlab"

From fda7a1509c615003efe1ea58385933b4dd86c5bc Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 21 Sep 2025 23:35:44 +0200
Subject: [PATCH 15/22] meshlab: darwin updates

- fix CMake exports
- add missing library
- update to llvm 19

Co-authored-by: Zexin Yuan <gh@yzx9.xyz>
---
 pkgs/by-name/me/meshlab/package.nix | 5 ++++-
 pkgs/top-level/all-packages.nix     | 1 -
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/pkgs/by-name/me/meshlab/package.nix b/pkgs/by-name/me/meshlab/package.nix
index 5cc3917cd7414a..0be074cf79e1e9 100644
--- a/pkgs/by-name/me/meshlab/package.nix
+++ b/pkgs/by-name/me/meshlab/package.nix
@@ -121,8 +121,11 @@ stdenv.mkDerivation (finalAttrs: {
   postInstall = lib.optionalString stdenv.hostPlatform.isDarwin ''
     mkdir -p $out/{Applications,bin,lib}
     mv $out/meshlab.app $out/Applications/
-    ln $out/Applications/meshlab.app/Contents/Frameworks/libmeshlab-common.dylib $out/lib/
+    ln $out/Applications/meshlab.app/Contents/Frameworks/libmeshlab-common{,-gui}.dylib $out/lib/
     makeWrapper $out/{Applications/meshlab.app/Contents/MacOS,bin}/meshlab
+    substituteInPlace $out/lib/cmake/meshlab/meshlabTargets-release.cmake --replace-fail \
+      "{_IMPORT_PREFIX}/meshlab.app" \
+      "{_IMPORT_PREFIX}/Applications/meshlab.app"
   '';
 
   # The hook will wrap all the plugin binaries, make they are not a
diff --git a/pkgs/top-level/all-packages.nix b/pkgs/top-level/all-packages.nix
index 1cf07ca6e30b8b..8559eb33869d97 100644
--- a/pkgs/top-level/all-packages.nix
+++ b/pkgs/top-level/all-packages.nix
@@ -11970,7 +11970,6 @@ with pkgs;
 
   meshlab = callPackage ../by-name/me/meshlab/package.nix {
     stdenv = if stdenv.hostPlatform.isDarwin then llvmPackages_18.stdenv else stdenv;
-    llvmPackages = llvmPackages_18;
   };
 
   meshlab-unstable = callPackage ../by-name/me/meshlab-unstable/package.nix {

From cf2cfac34f3e8a3bb90a5893cca9653523817a13 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 21 Sep 2025 17:10:16 +0200
Subject: [PATCH 16/22] meshlab-unstable: drop

---
 .../me/meshlab-unstable/meshlab.desktop       |  14 --
 pkgs/by-name/me/meshlab-unstable/package.nix  | 159 ------------------
 pkgs/top-level/aliases.nix                    |   1 +
 pkgs/top-level/all-packages.nix               |   5 -
 4 files changed, 1 insertion(+), 178 deletions(-)
 delete mode 100644 pkgs/by-name/me/meshlab-unstable/meshlab.desktop
 delete mode 100644 pkgs/by-name/me/meshlab-unstable/package.nix

diff --git a/pkgs/by-name/me/meshlab-unstable/meshlab.desktop b/pkgs/by-name/me/meshlab-unstable/meshlab.desktop
deleted file mode 100644
index aa8de186440d5d..00000000000000
--- a/pkgs/by-name/me/meshlab-unstable/meshlab.desktop
+++ /dev/null
@@ -1,14 +0,0 @@
-[Desktop Entry]
-Name=MeshLab
-Version=@version@
-Name[en_GB]=MeshLab
-GenericName=Mesh processing
-GenericName[en_GB]=Mesh processing
-Comment=View and process meshes
-Type=Application
-Exec=@out@/bin/meshlab %U
-TryExec=@out@/bin/meshlab
-Icon=@out@/share/icons/hicolor/meshlab.png
-Terminal=false
-MimeType=model/mesh;application/x-3ds;image/x-3ds;model/x-ply;application/sla;model/x-quad-object;model/x-geomview-off;application/x-cyclone-ptx;application/x-vmi;application/x-bre;model/vnd.collada+xml;model/openctm;application/x-expe-binary;application/x-expe-ascii;application/x-xyz;application/x-gts;chemical/x-pdb;application/x-tri;application/x-asc;model/x3d+xml;model/x3d+vrml;model/vrml;model/u3d;model/idtf;
-Categories=Graphics;3DGraphics;Viewer;Qt;
diff --git a/pkgs/by-name/me/meshlab-unstable/package.nix b/pkgs/by-name/me/meshlab-unstable/package.nix
deleted file mode 100644
index 00468e6a080118..00000000000000
--- a/pkgs/by-name/me/meshlab-unstable/package.nix
+++ /dev/null
@@ -1,159 +0,0 @@
-{
-  lib,
-  stdenv,
-  fetchFromGitHub,
-  llvmPackages,
-  libsForQt5,
-  libGLU,
-  lib3ds,
-  bzip2,
-  muparser,
-  eigen,
-  glew,
-  gmp,
-  levmar,
-  qhull,
-  cmake,
-  cgal,
-  boost,
-  mpfr,
-  xercesc,
-  onetbb,
-  embree,
-  libigl,
-  corto,
-  openctm,
-  structuresynth,
-}:
-
-let
-  tinygltf-src = fetchFromGitHub {
-    owner = "syoyo";
-    repo = "tinygltf";
-    tag = "v2.6.3";
-    hash = "sha256-IyezvHzgLRyc3z8HdNsQMqDEhP+Ytw0stFNak3C8lTo=";
-  };
-
-  # requires submodules to build
-  lib3mf-src = fetchFromGitHub {
-    owner = "3MFConsortium";
-    repo = "lib3mf";
-    tag = "v2.3.2";
-    fetchSubmodules = true;
-    hash = "sha256-pKjnN9H6/A2zPvzpFed65J+mnNwG/dkSE2/pW7IlN58=";
-  };
-in
-stdenv.mkDerivation {
-  pname = "meshlab-unstable";
-  version = "2023.12-unstable-2025-02-21";
-
-  src = fetchFromGitHub {
-    owner = "cnr-isti-vclab";
-    repo = "meshlab";
-    # note that this is in branch devel
-    rev = "72142583980b6dbfc5b85c6cca226a72f48497a9";
-    hash = "sha256-ev6b8sgJsjvD8KMBbC6kbrVvTxTxpqsXu/sK1Ih6+OA=";
-    # needed for an updated version of vcg in their submodule
-    fetchSubmodules = true;
-  };
-
-  postPatch = lib.optionalString stdenv.hostPlatform.isDarwin ''
-    substituteInPlace src/meshlab/CMakeLists.txt \
-      --replace-fail "set_additional_settings_info_plist(" "# set_additional_settings_info_plist(" \
-      --replace-fail "	TARGET meshlab" "#	TARGET meshlab" \
-      --replace-fail "	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)" \
-                     "#	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)"
-  '';
-
-  buildInputs = [
-    libGLU
-    libsForQt5.qtbase
-    libsForQt5.qtscript
-    libsForQt5.qtxmlpatterns
-    lib3ds
-    bzip2
-    muparser
-    eigen
-    glew
-    gmp
-    levmar
-    qhull
-    cgal
-    boost
-    mpfr
-    xercesc
-    onetbb
-    embree
-    libigl
-    corto
-    openctm
-    structuresynth
-  ]
-  ++ lib.optionals stdenv.cc.isClang [
-    llvmPackages.openmp
-  ];
-
-  nativeBuildInputs = [
-    cmake
-    libsForQt5.wrapQtAppsHook
-  ];
-
-  preConfigure = ''
-    mkdir src/external/downloads
-    cp -r --no-preserve=mode,ownership ${lib3mf-src} src/external/downloads/lib3mf-2.3.2
-
-    substituteAll ${./meshlab.desktop} resources/linux/meshlab.desktop
-    substituteInPlace src/external/tinygltf.cmake \
-      --replace-fail '$'{MESHLAB_EXTERNAL_DOWNLOAD_DIR}/tinygltf-2.6.3 ${tinygltf-src}
-    substituteInPlace src/external/libigl.cmake \
-      --replace-fail '$'{MESHLAB_EXTERNAL_DOWNLOAD_DIR}/libigl-'$'{LIBIGL_VER} ${libigl}
-    substituteInPlace src/external/nexus.cmake \
-      --replace-fail '$'{NEXUS_DIR}/src/corto ${corto.src}
-    substituteInPlace src/external/levmar.cmake \
-      --replace-fail '$'{LEVMAR_LINK} ${levmar.src} \
-      --replace-warn "MD5 ''${LEVMAR_MD5}" ""
-    substituteInPlace src/external/ssynth.cmake \
-      --replace-fail '$'{SSYNTH_LINK} ${structuresynth.src} \
-      --replace-warn "MD5 ''${SSYNTH_MD5}" ""
-    substituteInPlace src/common_gui/CMakeLists.txt \
-      --replace-warn "MESHLAB_LIB_INSTALL_DIR" "CMAKE_INSTALL_LIBDIR"
-  '';
-
-  postInstall = lib.optionalString stdenv.hostPlatform.isDarwin ''
-    mkdir -p $out/{Applications,bin,lib}
-    mv $out/meshlab.app $out/Applications/
-    ln $out/Applications/meshlab.app/Contents/Frameworks/* $out/lib/
-    makeWrapper $out/{Applications/meshlab.app/Contents/MacOS,bin}/meshlab
-  '';
-
-  postFixup =
-    lib.optionalString stdenv.hostPlatform.isLinux ''
-      patchelf --add-needed $out/lib/meshlab/libmeshlab-common.so $out/bin/.meshlab-wrapped
-      patchelf --add-needed $out/lib/meshlab/lib3mf.so $out/lib/meshlab/plugins/libio_3mf.so
-    ''
-    + lib.optionalString stdenv.hostPlatform.isDarwin ''
-      wrapQtApp "$out/Applications/meshlab.app/Contents/MacOS/meshlab"
-      install_name_tool -change libopenctm.dylib "${lib.getOutput "out" openctm}/lib/libopenctm.dylib" \
-        "$out/Applications/meshlab.app/Contents/PlugIns/libio_ctm.so"
-    '';
-
-  # The hook will wrap all the plugin binaries, make they are not a
-  # valid plugin. So we have to wrap the main app manually.
-  # See: https://github.com/NixOS/nixpkgs/pull/396295#issuecomment-3137779781
-  dontWrapQtApps = stdenv.hostPlatform.isDarwin;
-
-  # display a black screen on wayland, so force XWayland for now.
-  # Might be fixed when upstream will be ready for Qt6.
-  qtWrapperArgs = lib.optionals stdenv.hostPlatform.isLinux [
-    "--set QT_QPA_PLATFORM xcb"
-  ];
-
-  meta = {
-    description = "System for processing and editing 3D triangular meshes (unstable)";
-    mainProgram = "meshlab";
-    homepage = "https://www.meshlab.net/";
-    license = lib.licenses.gpl3Only;
-    maintainers = with lib.maintainers; [ pca006132 ];
-    platforms = with lib.platforms; linux ++ darwin;
-  };
-}
diff --git a/pkgs/top-level/aliases.nix b/pkgs/top-level/aliases.nix
index 6fa74f0f033d7f..41193ea2b0273d 100644
--- a/pkgs/top-level/aliases.nix
+++ b/pkgs/top-level/aliases.nix
@@ -1697,6 +1697,7 @@ mapAliases {
   memorymappingHook = throw "memorymapping has been removed, as it was only useful on old macOS versions that are no longer supported"; # Added 2024-10-05
   memstream = throw "memstream has been removed, as it was only useful on old macOS versions that are no longer supported"; # Added 2024-10-05
   memstreamHook = throw "memstream has been removed, as it was only useful on old macOS versions that are no longer supported"; # Added 2024-10-05
+  meshlab-unstable = throw "meshlab-unstable has been removed, as it was behind meshlab"; # Added 2025-09-21
   mhwaveedit = throw "'mkwaveedit' has been removed due to lack of maintenance upstream. Consider using 'audacity' or 'tenacity' instead"; # Added 2024-09-15
   microcodeAmd = microcode-amd; # Added 2024-09-08
   microcodeIntel = microcode-intel; # Added 2024-09-08
diff --git a/pkgs/top-level/all-packages.nix b/pkgs/top-level/all-packages.nix
index 8559eb33869d97..7cee16d5106f1b 100644
--- a/pkgs/top-level/all-packages.nix
+++ b/pkgs/top-level/all-packages.nix
@@ -11972,11 +11972,6 @@ with pkgs;
     stdenv = if stdenv.hostPlatform.isDarwin then llvmPackages_18.stdenv else stdenv;
   };
 
-  meshlab-unstable = callPackage ../by-name/me/meshlab-unstable/package.nix {
-    stdenv = if stdenv.hostPlatform.isDarwin then llvmPackages_18.stdenv else stdenv;
-    llvmPackages = llvmPackages_18;
-  };
-
   meshcentral = callPackage ../tools/admin/meshcentral { };
 
   michabo = libsForQt5.callPackage ../applications/misc/michabo { };

From a851aeeffe61128cba45f80a905d342f9d7fd4bd Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Thu, 25 Sep 2025 08:52:10 +0200
Subject: [PATCH 17/22] meshlab: remove from all-packages, use by-name

---
 pkgs/top-level/all-packages.nix | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/pkgs/top-level/all-packages.nix b/pkgs/top-level/all-packages.nix
index 7cee16d5106f1b..016876e0c45c49 100644
--- a/pkgs/top-level/all-packages.nix
+++ b/pkgs/top-level/all-packages.nix
@@ -11968,10 +11968,6 @@ with pkgs;
 
   mercurialFull = mercurial.override { fullBuild = true; };
 
-  meshlab = callPackage ../by-name/me/meshlab/package.nix {
-    stdenv = if stdenv.hostPlatform.isDarwin then llvmPackages_18.stdenv else stdenv;
-  };
-
   meshcentral = callPackage ../tools/admin/meshcentral { };
 
   michabo = libsForQt5.callPackage ../applications/misc/michabo { };

From 176bb070de73debf562c0c8572a0d9f23e3f0897 Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 5 Oct 2025 23:09:22 +0200
Subject: [PATCH 18/22] meshlab: darwin plist: substitute -> patch

Co-authored-by: Sandro <7258858+SuperSandro2000@users.noreply.github.com>
---
 pkgs/by-name/me/meshlab/no-plist.patch | 12 ++++++++++++
 pkgs/by-name/me/meshlab/package.nix    | 17 ++++++-----------
 2 files changed, 18 insertions(+), 11 deletions(-)
 create mode 100644 pkgs/by-name/me/meshlab/no-plist.patch

diff --git a/pkgs/by-name/me/meshlab/no-plist.patch b/pkgs/by-name/me/meshlab/no-plist.patch
new file mode 100644
index 00000000000000..7c8d753190a8ec
--- /dev/null
+++ b/pkgs/by-name/me/meshlab/no-plist.patch
@@ -0,0 +1,12 @@
+--- src/meshlab/CMakeLists.txt.orig	2025-10-05 23:04:12.786192073 +0200
++++ src/meshlab/CMakeLists.txt	2025-10-05 23:04:16.379256637 +0200
+@@ -92,9 +92,6 @@
+ 		MACOSX_BUNDLE_COPYRIGHT "Copyright VCG-ISTI-CNR © 2005-2021. All rights reserved."
+ 		)
+ 	
+-	set_additional_settings_info_plist(
+-		TARGET meshlab
+-		FILE ${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)
+ endif()
+ 
+ install(
diff --git a/pkgs/by-name/me/meshlab/package.nix b/pkgs/by-name/me/meshlab/package.nix
index 0be074cf79e1e9..9e431b24d75de3 100644
--- a/pkgs/by-name/me/meshlab/package.nix
+++ b/pkgs/by-name/me/meshlab/package.nix
@@ -102,19 +102,14 @@ stdenv.mkDerivation (finalAttrs: {
     # ref. https://github.com/cnr-isti-vclab/meshlab/pull/1617
     # merged upstream
     ./1617_cmake-use-system-dependencies-install-exports.patch
+  ]
+  ++ lib.optionals stdenv.hostPlatform.isDarwin [
+    ./no-plist.patch
   ];
 
-  postPatch =
-    lib.optionalString stdenv.hostPlatform.isLinux ''
-      substituteAll ${./meshlab.desktop} resources/linux/meshlab.desktop
-    ''
-    + lib.optionalString stdenv.hostPlatform.isDarwin ''
-      substituteInPlace src/meshlab/CMakeLists.txt \
-        --replace-fail "set_additional_settings_info_plist(" "# set_additional_settings_info_plist(" \
-        --replace-fail "	TARGET meshlab" "#	TARGET meshlab" \
-        --replace-fail "	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)" \
-                       "#	FILE \''${MESHLAB_BUILD_DISTRIB_DIR}/meshlab.app/Contents/Info.plist)"
-    '';
+  postPatch = lib.optionalString stdenv.hostPlatform.isLinux ''
+    substituteAll ${./meshlab.desktop} resources/linux/meshlab.desktop
+  '';
 
   cmakeFlags = cmakeFlagsDisallowDownload;
 

From d57949002195782b4a4903744273574a69be58db Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Fri, 19 Sep 2025 12:14:46 +0200
Subject: [PATCH 19/22] python3Packages.pymeshlab: 2023.12 -> 2025.7 + use
 system dependencies

---
 .../graphics/pymeshlab/default.nix            | 117 ++++++++----------
 1 file changed, 49 insertions(+), 68 deletions(-)

diff --git a/pkgs/applications/graphics/pymeshlab/default.nix b/pkgs/applications/graphics/pymeshlab/default.nix
index b6d37dfc564908..60c7132365eef4 100644
--- a/pkgs/applications/graphics/pymeshlab/default.nix
+++ b/pkgs/applications/graphics/pymeshlab/default.nix
@@ -1,106 +1,87 @@
 {
-  stdenv,
   lib,
+
+  stdenv,
   fetchFromGitHub,
-  libGLU,
-  qtbase,
-  qtscript,
-  qtxmlpatterns,
-  lib3ds,
-  bzip2,
-  muparser,
-  eigen,
-  glew,
-  gmp,
-  levmar,
-  qhull,
+  fetchpatch,
+
+  # nativeBuildInputs
   cmake,
-  cgal,
-  boost,
-  mpfr,
-  xercesc,
-  onetbb,
-  embree,
-  vcg,
-  libigl,
-  corto,
-  openctm,
-  structuresynth,
-  wrapQtAppsHook,
   python3Packages,
+
+  # propagatedBuildInputs
+  meshlab,
+
+  # buildInputs
+  libsForQt5,
+  glew,
+  vcg,
 }:
 
 stdenv.mkDerivation (finalAttrs: {
   pname = "pymeshlab";
-  version = "2023.12";
+  version = "2025.7";
 
   src = fetchFromGitHub {
     owner = "cnr-isti-vclab";
     repo = "pymeshlab";
-    rev = "v${finalAttrs.version}";
-    hash = "sha256-IOlRdXoUPOJt67g3HqsLchV5aL+JUEks2y1Sy+wpwsg=";
-    fetchSubmodules = true;
+    tag = "v${finalAttrs.version}";
+    hash = "sha256-LCR2/AyX9uVX4xhZareUL6YlpUsCFiGDMBB5nFp+H6k=";
   };
 
-  buildInputs = [
-    libGLU
-    qtbase
-    qtscript
-    qtxmlpatterns
-    lib3ds
-    bzip2
-    muparser
-    eigen
-    glew
-    gmp
-    levmar
-    qhull
-    cgal
-    boost
-    mpfr
-    xercesc
-    onetbb
-    embree
-    vcg
-    libigl
-    corto
-    structuresynth
-    openctm
+  patches = [
+    # CMake: allow use of system-provided meshlab & pybind11
+    # ref. https://github.com/cnr-isti-vclab/PyMeshLab/pull/445
+    # merged upstream
+    (fetchpatch {
+      url = "https://github.com/cnr-isti-vclab/PyMeshLab/commit/b363caae4362746b3f9e9326fe7b72a2ec7824d9.patch";
+      hash = "sha256-euKfOx/T0qdeMx79dpEalzmdWsr4nbDFJfKdksvULBw=";
+    })
   ];
 
   nativeBuildInputs = [
     cmake
-    wrapQtAppsHook
     python3Packages.pybind11
   ];
 
   propagatedBuildInputs = [
+    meshlab
     python3Packages.numpy
+    python3Packages.pythonImportsCheckHook
   ];
 
-  preConfigure = ''
-    substituteInPlace src/meshlab/src/external/libigl.cmake \
-      --replace-fail '$'{MESHLAB_EXTERNAL_DOWNLOAD_DIR}/libigl-2.4.0 ${libigl}
-    substituteInPlace src/meshlab/src/external/nexus.cmake \
-      --replace-fail '$'{NEXUS_DIR}/src/corto ${corto.src}
-    substituteInPlace src/meshlab/src/external/levmar.cmake \
-      --replace-fail '$'{LEVMAR_LINK} ${levmar.src} \
-      --replace-warn "MD5 ''${LEVMAR_MD5}" ""
-    substituteInPlace src/meshlab/src/external/ssynth.cmake \
-      --replace-fail '$'{SSYNTH_LINK} ${structuresynth.src} \
-      --replace-warn "MD5 ''${SSYNTH_MD5}" ""
-  '';
+  buildInputs = [
+    glew
+    libsForQt5.qtbase
+    vcg
+  ];
+
+  dontWrapQtApps = true;
 
   cmakeFlags = [
     "-DCMAKE_INSTALL_PREFIX=${placeholder "out"}/${python3Packages.python.sitePackages}/pymeshlab"
-    "-DVCGDIR=${vcg.src}"
   ];
 
+  # Get io & filter plugins from meshlab, to avoild render, decorate & edit ones
+  postInstall = ''
+    install -D -t $out/${python3Packages.python.sitePackages}/pymeshlab/lib/plugins \
+      ${meshlab}/lib/meshlab/plugins/libio_* \
+      ${meshlab}/lib/meshlab/plugins/libfilter_*
+  '';
+
+  postFixup = ''
+    patchelf \
+      --add-needed ${meshlab}/lib/meshlab/libmeshlab-common.so \
+      $out/${python3Packages.python.sitePackages}/pymeshlab/pmeshlab.*.so
+  '';
+
+  pythonImportsCheck = [ "pymeshlab" ];
+
   meta = {
     description = "Open source mesh processing python library";
     homepage = "https://github.com/cnr-isti-vclab/PyMeshLab";
     license = lib.licenses.gpl3Only;
     maintainers = with lib.maintainers; [ nim65s ];
-    platforms = with lib.platforms; linux;
+    platforms = with lib.platforms; linux ++ darwin;
   };
 })

From 2ba7d440531cdc34e21d45a066bb6304138b2bcf Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 21 Sep 2025 23:27:12 +0200
Subject: [PATCH 20/22] python3Packages.pymeshlab: fix on darwin

---
 .../graphics/pymeshlab/default.nix            | 27 ++++++++++++++-----
 1 file changed, 20 insertions(+), 7 deletions(-)

diff --git a/pkgs/applications/graphics/pymeshlab/default.nix b/pkgs/applications/graphics/pymeshlab/default.nix
index 60c7132365eef4..b6e0619e1c2372 100644
--- a/pkgs/applications/graphics/pymeshlab/default.nix
+++ b/pkgs/applications/graphics/pymeshlab/default.nix
@@ -14,6 +14,7 @@
 
   # buildInputs
   libsForQt5,
+  llvmPackages,
   glew,
   vcg,
 }:
@@ -54,6 +55,9 @@ stdenv.mkDerivation (finalAttrs: {
     glew
     libsForQt5.qtbase
     vcg
+  ]
+  ++ lib.optionals stdenv.cc.isClang [
+    llvmPackages.openmp
   ];
 
   dontWrapQtApps = true;
@@ -63,13 +67,22 @@ stdenv.mkDerivation (finalAttrs: {
   ];
 
   # Get io & filter plugins from meshlab, to avoild render, decorate & edit ones
-  postInstall = ''
-    install -D -t $out/${python3Packages.python.sitePackages}/pymeshlab/lib/plugins \
-      ${meshlab}/lib/meshlab/plugins/libio_* \
-      ${meshlab}/lib/meshlab/plugins/libfilter_*
-  '';
-
-  postFixup = ''
+  postInstall =
+    let
+      plugins =
+        if stdenv.hostPlatform.isDarwin then
+          "Applications/meshlab.app/Contents/PlugIns"
+        else
+          "lib/meshlab/plugins";
+      pyPlugins = if stdenv.hostPlatform.isDarwin then "PlugIns" else "lib/plugins";
+    in
+    ''
+      install -D -t $out/${python3Packages.python.sitePackages}/pymeshlab/${pyPlugins} \
+        ${meshlab}/${plugins}/libio_* \
+        ${meshlab}/${plugins}/libfilter_*
+    '';
+
+  postFixup = lib.optionalString stdenv.hostPlatform.isLinux ''
     patchelf \
       --add-needed ${meshlab}/lib/meshlab/libmeshlab-common.so \
       $out/${python3Packages.python.sitePackages}/pymeshlab/pmeshlab.*.so

From 3293b64dca95a2a3b12d651b6de43d29b7f5fc1f Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Sun, 5 Oct 2025 23:10:44 +0200
Subject: [PATCH 21/22] python3Packages.pymeshlab: dont propagate hook

Co-authored-by: Sandro <7258858+SuperSandro2000@users.noreply.github.com>
---
 pkgs/applications/graphics/pymeshlab/default.nix | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/pkgs/applications/graphics/pymeshlab/default.nix b/pkgs/applications/graphics/pymeshlab/default.nix
index b6e0619e1c2372..ec6edb230aff14 100644
--- a/pkgs/applications/graphics/pymeshlab/default.nix
+++ b/pkgs/applications/graphics/pymeshlab/default.nix
@@ -45,10 +45,13 @@ stdenv.mkDerivation (finalAttrs: {
     python3Packages.pybind11
   ];
 
+  nativeCheckInputs = [
+    python3Packages.pythonImportsCheckHook
+  ];
+
   propagatedBuildInputs = [
     meshlab
     python3Packages.numpy
-    python3Packages.pythonImportsCheckHook
   ];
 
   buildInputs = [

From bdfaddb895e8bb20923f79aa705a1938931aba0d Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Mon, 6 Oct 2025 01:34:14 +0200
Subject: [PATCH 22/22] openscad: fix on darwin

---
 pkgs/by-name/op/openscad/package.nix | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/pkgs/by-name/op/openscad/package.nix b/pkgs/by-name/op/openscad/package.nix
index a4256d03506120..e914d3043f8364 100644
--- a/pkgs/by-name/op/openscad/package.nix
+++ b/pkgs/by-name/op/openscad/package.nix
@@ -84,6 +84,15 @@ stdenv.mkDerivation rec {
         sed -i 's/& / \&/g;s/\*\*/\0 /g;s/^\(.\)  /\1\t/' "$out"
       '';
     })
+  ]
+  ++ lib.optionals stdenv.hostPlatform.isDarwin [
+    # ref. https://github.com/openscad/openscad/pull/4013 merged upstream
+    (fetchpatch {
+      name = "mem_fun-to-mem_fn.patch";
+      url = "https://github.com/openscad/openscad/commit/c9a1abbedfbf6dda9a23d3ad5844d11e5278a928.patch";
+      hash = "sha256-Man9ledRREb7U+2UOQ0VkpiwbYQjyVOY21YaRFObZc8=";
+    })
+
   ];
 
   postPatch = ''
@@ -92,6 +101,11 @@ stdenv.mkDerivation rec {
 
     substituteInPlace src/openscad.cc \
       --replace-fail 'boost::join' 'boost::algorithm::join'
+  ''
+  # ref. https://github.com/openscad/openscad/pull/4253 merged upstream but does not apply
+  + lib.optionalString stdenv.hostPlatform.isDarwin ''
+    substituteInPlace src/FreetypeRenderer.h \
+      --replace-fail ": public std::unary_function<const GlyphData *, void>" ""
   '';
 
   nativeBuildInputs = [
