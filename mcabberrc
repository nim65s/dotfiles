set jid = saurelg@im.inpt.fr
##############################
## set password = P4ssw√•\o/ ##
##############################
set server = im.inpt.fr
#set port = 5222

# If you don't know what a resource is, do not set it.
# Set disable_random_resource to 1 if you don't want mcabber to add a random
# suffix to the resource name.
#set resource = mcabber
#set disable_random_resource = 0

#set priority = 3
#set priority_away = 0

set nickname = Nim
set ignore_self_presence = 1
set lang = fr
set cmdhistory_lines = 250
set roster_display_filter = ofdna
set logging = 1
set load_logs = 1
set logging_dir = ~/.mcabber/histo/
set logging_ignore_status = 1
set log_muc_conf = 1
set load_muc_logs = 1
set max_history_blocks = 8
set fifo_name = ~/.mcabber/mcabber.fifo

#{{{ SSL/TLS options:
# TLS is now regarded as the default encryption for connecting to jabber.
# You can require TLS by setting tls to 1.  If your jabber server
# still doesn't support TLS, you can use the old-style SSL by setting
# ssl to 1.  It's not possible to use old-style SSL and TLS together.
set ssl = 0
set tls = 1
set ssl_ignore_checks = 1
# Moreover, it's possible to check whether the fingerprint of the
# ssl certificate matches ssl_fingerprint.
# You can get the fingerprint of your server either with gnutls or openssl:
# 1. gnutls-cli -p 5223 $your_server
# 2. openssl s_client -connect $your_server:5223 | \
#    openssl x509 -fingerprint -md5 -noout
#set ssl_fingerprint = 97:5C:00:3F:1D:77:45:25:E2:C5:70:EC:83:C8:87:EE
# Set ssl_ignore_checks to 1 to disable all certificate checks except the
# fingerprint check.
#set ssl_ignore_checks = 0
#}}}

#{{{ PGP support
# Set pgp to 1 to enable OpenPGP.
# To sign outgoing messages, select your private key id with
# the pgp_private_key option.  You cannot change these options once
# mcabber is running.
# Note: you can get the Key Id with gpg: "gpg --list-keys --keyid-format long"
#set pgp = 0
#set pgp_private_key = "C9940A9BB0B92210"
#
# You can set your PGP passhrase here, although it's NOT advised.
#set pgp_passphrase = "PGPpassword"
#
# If you don't like the default number of passphrase retries (2), you
# can change it here.  If this number is < 0, mcabber will keep asking
# until the passphrase is good.
#set pgp_passphrase_retries = 2
#}}}

#{{{ Keepalive
# If you need a ping/keepalive to leave your connection open, you
# can use the pinginterval.  Setting this option to 0 disables the ping.
# Default value is 40 seconds.
#set pinginterval = 40
#}}}

#{{{ Aspell
# If your mcabber has been built with Aspell support, you can enable spell
# checking with the following options (you can't change them once mcabber is
# running).
#set spell_enable = 1
#set spell_lang = en_US
#set spell_encoding = iso8859-1
#set spell_encoding = UTF-8
#}}}

#{{{ TODO max_history_age
# When load_logs (or load_muc_logs) is enabled, you can specify a maximum
# number of history days to load into memory with max_history_age.
# Default = 0 (disabled -- everything is loaded)
# Note: this option is only used when reading history files, not later.
#set max_history_age = 0
#}}}

# You can specify a maximum number of data blocks per buffer (1 block contains
# about 8kB).  The default is 0 (unlimited).  If set, this value must be > 2.

#{{{ TODO Modules
# If mcabber is built with modules support, you can specify the path
# to the directory where your modules reside. Though, default compiled-in
# value should be appropriate.
#set modules_dir = /usr/lib/mcabber/
#}}}

#{{{ TODO External command for events
# You can specify a script or process to be launched when an event occurs.
# Set 'events_ignore_active_window' to 1 if you don't want the script to
# be run for a message to the current active window (default: 0).
#
# If 'event_log_files' is set, a file is created and contains the body of
# the message (incoming messages only); the file name is the last parameter.
# If you enable this, you can specify the directory mcabber will use to
# create these messages with the 'event_log_dir' variable (default is the
# system temp dir, or MCABBERTMPDIR environment variable).  Please note
# that mcabber won't delete these files, it's your script's job.
#
# The command is called the following way: 
#   $events_command MSG IN jabber@id [file] (when receiving a message)
#   $events_command MSG OUT jabber@id       (when sending a message)
#   $events_command MSG MUC room_id [file]  (when receiving a MUC message)
#   $events_command STATUS X jabber@id      (new buddy status is X)
#   $events_command UNREAD "N x y z"        (number of unread buddy buffers)
#   (x=attention y=muc unread buffers z=muc unread buffers with attention sign)
# See sample script in contrib/ directory.
#set events_command = ~/.mcabber/eventcmd
#
#set events_ignore_active_window = 0
#
#set event_log_files = 0
#set event_log_dir = ~/.mcabber/event_files
#}}}

#{{{ External command status check
# You can request mcabber to inspect exit status value after each
# events_command.  If this option is set, mcabber will beep if the
# exit value is 2.
#set eventcmd_checkstatus = 0
#}}}

#{{{ Internal hooks
# You can ask mcabber to execute an internal command when a special event
# occurs (for example when it connects to the server).
#
# 'hook-post-connect' is executed when mcabber has connected to the server
# and the roster has been received.
#set hook-post-connect = room join net7@chat.im.inpt.fr
#
# 'hook-pre-disconnect' is executed just before mcabber disconnects from
# the server.
#set hook-pre-disconnect = say_to foo@bar Goodbye!
#}}}

#{{{ Traces logging
# If you want advanced traces, please specify a file and a level here.
# There are currently 4 tracelog levels:
#  lvl 1: most events of the log window are written to the file
#  lvl 2: Loudmouth verbose logging
#  lvl 3: debug logging (XML, etc.)
#  lvl 4: noisy debug logging (Loudmouth parser...)
# Default is level 0, no trace logging
#set tracelog_level = 1
#set tracelog_file = ~/.mcabber/mcabber.log
#}}}

set autoaway = 3600

#{{{ Message blocking
# Set 'block_unsubscribed' to 1 if you want to block (drop) incoming
# messages from people you haven't authorized. (default: 0)
#set block_unsubscribed = 0
#
# Set 'delete_on_reject' to 1 if you want to delete buddies from your
# roster when you reject their subscription request. (default: 0)
# (See documentation for /event)
# The buddy is actually deleted only if there is no other subscription,
# so for example if you are subscribed to this buddy's presence updates it
# won't be deleted.
#set delete_on_reject = 0
#}}}

set muc_print_status = in_and_out
set muc_completion_suffix = ": "

#{{{ Status messages
# The 'message' value will override all others, take care!
#set message = Unique message status
#set message_avail     = I'm available
#set message_free      = I'm free for chat
#set message_dnd       = Please do not disturb
#set message_notavail  = I'm not available
#set message_away      = I'm away
#
# The auto-away message is only used when 'autoaway' is set.  The previous
# message will be restored when leaving auto-away status.  If this message
# isn't defined, the status message will stay unchanged.
#set message_autoaway = Auto-away (idle)
#}}}

# Escape timeout delay (ESCDELAY)
# The ESCDELAY variable specifies the time, in milliseconds, for which
# the ncurses interface will await a character sequence.
# The default is 1000 (1 second).
# If you want mcabber to react faster after hitting Escape, you can lower
# this value by setting the ESCDELAY environment variable or setting the
# 'escdelay' option.
set escdelay = 50

#{{{ TODO Colors
# Colors are: black, red, green, yellow, blue, magenta, cyan, white
# For text colors (i.e. not background and bg* colors) you can also use
# the "bright" prefix to get a bright/bold color.  Example: brightblue
# You can use the "default" color, too (i.e. for transparent background).
# If your terminal supports 256 colors, you can use the color number
# directly (16-255).
#
# Have a look at the contrib/themes/ directory to see some sample
# color settings.
#
# background: background color of the chat window and the log window
# general:    text color in the chat window and the log window
# info:       text color in the chat window for info messages
# msgin:      text color in the chat window for incoming messages
# msgout:     text color in the chat window for outgoing messages
# msghl:      text color in the chat window for highlighted messages (MUC)
# bgstatus:   background color of the status lines
# status:     text color of the status lines
# roster:     text color of the roster (buddylist) normal items
# bgrostersel: background color of the selected roster item
# rostersel:   text color of the selected roster item
# rosterselmsg:text color of the selected roster item, if there is a new msg
# rosternewmsg: text color of items with unread messages
#
#set color_background   = black
set color_background   = default
#set color_general      = white
#set color_info         = white
#set color_msgin        = white
#set color_msgout       = cyan
#set color_msghl        = yellow
#set color_bgstatus     = yellow
#set color_status       = white
#set color_roster       = green
#set color_bgrostersel  = cyan
#set color_rostersel    = blue
#set color_rosterselmsg = red
#set color_rosternewmsg = red

# You can color roster items by their status and JID.  For example, to have
# all roster items white, just all contacts from jabber.org that are away,
# not available or do not disturb yellow, you do this:
#
#color roster * * white
#color roster adn *@jabber.org yellow

# You can let mcabber color nicks in MUC.
# These colors will by used automatically:
#set nick_colors = red green yellow magenta cyan brightblack brightred brightgreen brightyellow brightblue brightmagenta brightcyan
set nick_colors = red green yellow magenta cyan brightred brightgreen brightyellow brightblue brightmagenta brightcyan
#set nick-colors = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 21 22 14 15 16 17 18 19 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 55 57 58 59 60 61 62 63 67 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 94 95 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123  130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 197 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 230 242 243 244 245 246 247 248 249 250 251 252 253 254 255
# This turns coloring of all mucs on:
color muc * on
#
# If you want someone's nick to be the same all the time:
#color mucnick my_friend yellow
#}}}

# Style
set log_win_height = 3
set roster_width=23

# By default, the displayed name of a contact in the roster window will
# be the JID if no name has been specified.  You can use the following
# option if you only want to see the username part.
#set roster_hide_domain = 0
#
# Buddy name format (in status window):
# - 0: (default) "<jid/resource>"
# - 1: "name <jid/resource>" (name is omitted if same as the JID)
# - 2: "name/resource" (if the name is the same as the JID, use <jid/res>)
# - 3: "name" (if the name is the same as the JID, use <jid/res>)
#set buddy_format = 2
#
set time_prefix = 1
# Display the status changes in the chat buffers (default: 0, never)
# Values:  0: never  1: only connect/disconnect  2: all
set show_status_in_buffer = 1
# Set 'info' to anything you'd like to see in your lower status line.
# TODO set info = NIM

# Set 'url_regex' to a regular expression matching urls.  If it matches an
# url in an incoming messages, it'll print it to the log window.
set url_regex = "(((https?|ftps?|nntp)://)|www[.][-a-z0-9.]+|(mailto:|news:))(%[0-9A-F]{2}|[-_.!~*';/?:@&=+$,#[:alnum:]])+"

#{{{ Contacts PGP information
# You can provide a PGP key to be used for a given Jabber user, or
# disable PGP on a per-account basis.
# If you provide a KeyId for a contact, it will be compared to the key the
# contact uses to sign their presence/messages and it will be used for
# all outgoing encrypted messages (that is, the contact signature key will
# be ignored).
# Please note that the key must match exactly the id seen with /info.
#pgp disable foo@bar.org
#pgp setkey bar@foo.net C9940A9BB0B92210
#}}}

# Aliases
alias me = say /me
alias online   = status online
alias away     = status away
alias dnd      = status dnd
alias notavail = status notavail
alias names = room names
alias rs = roster search
alias w = room privmsg
alias chut = buffer scroll_toggle

# Set use_mouse to 1 to map mouse buttons like keycodes.
#set use_mouse = 1

# Key bindings
# Ctrl-q (17) bound to /roster unread_next
bind 17 = roster unread_next
# Ctrl-x (24) bound to /roster alternate
bind 24 = roster alternate
# F5 (269) bound to /roster toggle_offline  (centericq-like, IIRC)
bind 269 = roster toggle_offline
# F12 (276) bound to /roster toggle
bind 276 = roster toggle
# Ctrl-Up/Ctrl-Down bound to /buffer up/down  (like Ctrl-p/Ctrl-n)
bind 521 = buffer up
bind 514 = buffer down
bind M91 = iline iline_start

module load beep
module load xttitle
#module beep enable

#vim:set foldmethod=marker:
